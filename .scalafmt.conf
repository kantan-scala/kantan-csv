version                         = 3.8.3
runner.dialect                  = scala212source3

docstrings.style                = SpaceAsterisk
maxColumn                       = 120
includeCurlyBraceInSelectChains = false
includeNoParensInSelectChains   = false
danglingParentheses.preset      = true
literals.long                   = Upper
literals.float                  = Upper
literals.double                 = Upper

continuationIndent {
  callSite = 2
  defnSite = 2
}

newlines.forceBeforeAssign = def

spaces {
  afterKeywordBeforeParen = false
}

project {
  git = true
}

binPack {
  parentConstructors = true
  literalArgumentLists = true
}

optIn.breakChainOnFirstMethodDot = true

rewrite {
  rules = [
    AvoidInfix,
    RedundantBraces,
    RedundantParens,
    PreferCurlyFors,
    SortModifiers
  ]
}
rewrite.sortModifiers.order = [
  "`override`"
  "`private`"
  "`protected`"
  "`implicit`"
  "`final`"
  "`sealed`"
  "`abstract`"
  "`lazy`"
]

# Unicode operators are deprecated, replace them by regular ASCII ones.
rewriteTokens {
  "→": "->"
  "⇒": "=>"
  "←": "<-"
}

align {
  arrowEnumeratorGenerator = true
  tokens               = [
    {code = "=>",      owner = Case}
    {code = "%",       owner = Term.ApplyInfix}
    {code = "%%",      owner = Term.ApplyInfix}
    {code = "%%%",     owner = Term.ApplyInfix}
    {code = ":=",      owner = Term.ApplyInfix}
    {code = "+=",      owner = Term.ApplyInfix}
    {code = "++=",     owner = Term.ApplyInfix}
    {code = "=",       owner = (Enumerator.Val|Defn.(Va(l|r)|Def|Type))}
    {code = "<-",      owner = Enumerator.Generator}
    "//"
    {code = "->",      owner = Term.ApplyInfix}
    {code = "extends", owner = Defn.(Class|Trait|Object)}
    {code = "{",       owner = Template}
    {code = "}",       owner = Template}
  ]
  openParenCallSite        = false
  openParenDefnSite        = false
}
